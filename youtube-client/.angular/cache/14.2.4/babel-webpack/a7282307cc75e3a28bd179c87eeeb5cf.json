{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { SettingsSort } from '../const/settings';\nimport { SettingsState } from '../models/settings.state';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\n\nconst _c0 = function (a1) {\n  return [\"settings__date\", a1];\n};\n\nconst _c1 = function (a1) {\n  return [\"settings__count\", a1];\n};\n\nexport let SettingsComponent = /*#__PURE__*/(() => {\n  class SettingsComponent {\n    constructor() {\n      this.settingsEvent = new EventEmitter();\n      this.valueFilter = SettingsState.filterWord.value;\n      this.sortSet = SettingsState.sortSet;\n      this.outputEventSettings = {\n        buttonSortDate: {\n          active: false,\n          value: ''\n        },\n        buttonSortCount: {\n          active: false,\n          value: ''\n        },\n        buttonFilterByWord: {\n          active: false,\n          value: ''\n        }\n      };\n      this.sortOrderView = {\n        none: '&nbsp;',\n        asc: '&uarr;',\n        desc: '&darr;'\n      };\n      this.viewSort = {\n        sortDate: '&nbsp;',\n        sortCount: '&nbsp;'\n      };\n      this.viewSortDate = '&nbsp;';\n      this.viewSortCount = '&nbsp;';\n    }\n\n    setActiveEvent(value) {\n      Object.keys(this.outputEventSettings).forEach(key => {\n        if (key === value) {\n          this.outputEventSettings[key].active = true;\n        } else this.outputEventSettings[key].active = false;\n      });\n    }\n\n    showDirection(sort) {\n      if (this.viewSort[sort] === this.sortOrderView.none || this.viewSort[sort] === this.sortOrderView.desc) {\n        this.viewSort[sort] = this.sortOrderView.asc;\n        SettingsState[sort].direction = true;\n      } else {\n        this.viewSort[sort] = this.sortOrderView.desc;\n        SettingsState[sort].direction = false;\n      }\n    }\n\n    onSortDate() {\n      this.setActiveEvent('buttonSortDate');\n      SettingsState.sortSet = 'sortDate';\n      this.sortSet = 'sortDate';\n      this.showDirection(this.sortSet);\n\n      if (this.viewSortCount === this.sortOrderView.none || this.viewSortCount === this.sortOrderView.desc) {\n        this.viewSortCount = this.sortOrderView.asc;\n        SettingsState[SettingsState.sortSet].direction = true;\n        this.outputEventSettings.buttonSortDate.value = SettingsSort.direction.asc;\n      } else {\n        this.viewSortCount = this.sortOrderView.desc;\n        SettingsState[SettingsState.sortSet].direction = false;\n        this.outputEventSettings.buttonSortDate.value = SettingsSort.direction.desc;\n      }\n\n      this.settingsEvent.emit(this.outputEventSettings);\n    }\n\n    onSortCount() {\n      this.setActiveEvent('buttonSortCount');\n      SettingsState.sortSet = 'sortCount';\n      this.sortSet = 'sortCount';\n      this.showDirection(this.sortSet);\n\n      if (this.viewSortCount === this.sortOrderView.none || this.viewSortCount === this.sortOrderView.desc) {\n        this.viewSortCount = this.sortOrderView.asc;\n        SettingsState[SettingsState.sortSet].direction = true;\n        this.outputEventSettings.buttonSortCount.value = SettingsSort.direction.asc;\n      } else {\n        this.viewSortCount = this.sortOrderView.desc;\n        SettingsState[SettingsState.sortSet].direction = false;\n        this.outputEventSettings.buttonSortCount.value = SettingsSort.direction.desc;\n      }\n\n      this.settingsEvent.emit(this.outputEventSettings);\n    }\n\n    onFilter() {\n      this.setActiveEvent('buttonFilterByWord');\n      SettingsState.filterWord.value = this.valueFilter;\n      this.outputEventSettings.buttonFilterByWord.value = this.valueFilter;\n      this.settingsEvent.emit(this.outputEventSettings);\n    }\n\n  }\n\n  SettingsComponent.ɵfac = function SettingsComponent_Factory(t) {\n    return new (t || SettingsComponent)();\n  };\n\n  SettingsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SettingsComponent,\n    selectors: [[\"app-settings\"]],\n    outputs: {\n      settingsEvent: \"settingsEvent\"\n    },\n    decls: 15,\n    vars: 9,\n    consts: [[1, \"settings\"], [1, \"settings__title\"], [3, \"ngClass\", \"click\"], [1, \"settings__date-text\"], [1, \"settings__date-sort-direction\", 3, \"innerHTML\"], [1, \"settings__count-text\"], [1, \"settings__count-sort-direction\", 3, \"innerHTML\"], [1, \"settings__filter\"], [\"for\", \"input\"], [\"type\", \"search\", \"id\", \"settings__input\", \"autocomplete\", \"search\", \"placeholder\", \"filter... by words\", \"name\", \"valueFilter\", 1, \"settings__input\", 3, \"ngModel\", \"keydown.enter\", \"ngModelChange\"]],\n    template: function SettingsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2, \"Sorting by:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵlistener(\"click\", function SettingsComponent_Template_div_click_3_listener() {\n          return ctx.onSortDate();\n        });\n        i0.ɵɵelementStart(4, \"span\", 3);\n        i0.ɵɵtext(5, \"date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"span\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 2);\n        i0.ɵɵlistener(\"click\", function SettingsComponent_Template_div_click_7_listener() {\n          return ctx.onSortCount();\n        });\n        i0.ɵɵelementStart(8, \"span\", 5);\n        i0.ɵɵtext(9, \"count of views\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"span\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"form\", 7)(12, \"label\", 8);\n        i0.ɵɵtext(13, \"by word or sentance\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"input\", 9);\n        i0.ɵɵlistener(\"keydown.enter\", function SettingsComponent_Template_input_keydown_enter_14_listener() {\n          return ctx.onFilter();\n        })(\"ngModelChange\", function SettingsComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.valueFilter = $event;\n        });\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx.sortSet === \"sortDate\" ? \"settings__sort_active\" : \"\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"innerHTML\", ctx.viewSort.sortDate, i0.ɵɵsanitizeHtml);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c1, ctx.sortSet === \"sortCount\" ? \"settings__sort_active\" : \"\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"innerHTML\", ctx.viewSort.sortCount, i0.ɵɵsanitizeHtml);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.valueFilter);\n      }\n    },\n    dependencies: [i1.NgClass, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n    styles: [\".settings[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;gap:1.5vw;color:#2f80ed;background-color:#e5e5e5;font-size:12px;line-height:14px;margin:0 auto;padding:1em 0}.settings__title[_ngcontent-%COMP%]{color:#929292}.settings__date[_ngcontent-%COMP%]:hover, .settings__count[_ngcontent-%COMP%]:hover{cursor:pointer;text-shadow:0 0 .03em #000000}.settings__sort_active[_ngcontent-%COMP%]{background-color:#8ff271}.settings__filter[_ngcontent-%COMP%]{display:flex;align-items:center;gap:1vw}.settings__input[_ngcontent-%COMP%]{box-shadow:0 0 2vw .4vh #ffffe60f;padding:.1em .5em 0;border-radius:.2em}\"]\n  });\n  return SettingsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}